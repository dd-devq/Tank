(()=>{"use strict";var e,t={573:(e,t,s)=>{var i=s(260),h=s.n(i);class a extends Phaser.Scene{constructor(){super({key:"UIScene",active:!0}),this.score=0}create(){this.displayZone=this.add.zone(0,0,window.innerWidth,window.innerHeight).setDepth(-1),this.scoreText=this.add.text(20,20,"SCORE - "+this.score.toString(),{font:"48px Arial",color:"#000000"}),this.add.existing(this.displayZone),this.add.existing(this.scoreText),Phaser.Display.Align.In.TopLeft(this.displayZone,this.scoreText),this.scene.get("GameScene").events.on("addScore",(e=>{this.score+=e,this.scoreText.setText("SCORE - "+this.score.toString())}))}}class r extends Phaser.Scene{constructor(){super({key:"BootScene"})}preload(){this.cameras.main.setBackgroundColor(0),this.createLoadingGraphics(),this.load.on("progress",(e=>{this.progressBar.clear(),this.progressBar.fillStyle(8971347,1),this.progressBar.fillRect(this.cameras.main.width/4,this.cameras.main.height/2-16,this.cameras.main.width/2*e,16)})),this.load.on("complete",(()=>{this.progressBar.destroy(),this.loadingBar.destroy()})),this.load.pack("preload","./assets/pack.json","preload")}update(){this.scene.start("MenuScene")}createLoadingGraphics(){this.loadingBar=this.add.graphics(),this.loadingBar.fillStyle(16777215,1),this.loadingBar.fillRect(this.cameras.main.width/4-2,this.cameras.main.height/2-18,this.cameras.main.width/2+4,20),this.progressBar=this.add.graphics()}}class n extends Phaser.GameObjects.Image{constructor(e){super(e.scene,e.x,e.y,e.texture),this.rotation=e.rotation,this.initImage(),this.scene.add.existing(this)}initImage(){this.bulletSpeed=1e3,this.setOrigin(.5,.5),this.setDepth(2),this.scene.physics.world.enable(this),this.scene.physics.velocityFromRotation(this.rotation-Math.PI/2,this.bulletSpeed,this.body.velocity)}update(){}}class l extends Phaser.GameObjects.Image{getBullets(){return this.bullets}constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.initImage(),this.scene.add.existing(this)}initImage(){this.health=100,this.lastShoot=0,this.speed=200,this.setOrigin(.5,.5),this.setDepth(0),this.angle=180,this.barrel=this.scene.add.image(this.x,this.y,"barrelBlue"),this.barrel.setOrigin(.5,1),this.barrel.setDepth(1),this.barrel.angle=180,this.lifeBar=this.scene.add.graphics(),this.redrawLifebar(),this.bullets=this.scene.add.group({active:!0,maxSize:10,runChildUpdate:!0}),null!==this.scene.input.keyboard&&(this.cursors=this.scene.input.keyboard.createCursorKeys(),this.shootingKey=this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE),this.upKey=this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W),this.downKey=this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S),this.leftKey=this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A),this.rightKey=this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D)),this.scene.input.on("pointermove",this.updateBarrel,this),this.scene.physics.world.enable(this)}update(){this.active?(this.barrel.x=this.x,this.barrel.y=this.y,this.lifeBar.x=this.x,this.lifeBar.y=this.y,this.handleInput(),this.handleShooting()):(this.destroy(),this.barrel.destroy(),this.lifeBar.destroy())}handleInput(){this.cursors.up.isDown||this.upKey.isDown?this.scene.physics.velocityFromRotation(this.rotation-Math.PI/2,this.speed,this.body.velocity):this.cursors.down.isDown||this.downKey.isDown?this.scene.physics.velocityFromRotation(this.rotation-Math.PI/2,-this.speed,this.body.velocity):this.body.setVelocity(0,0),(this.cursors.left.isDown||this.leftKey.isDown)&&(this.cursors.down.isDown||this.downKey.isDown||this.cursors.up.isDown||this.upKey.isDown)?this.rotation+=.02:(this.cursors.right.isDown||this.rightKey.isDown)&&(this.cursors.down.isDown||this.downKey.isDown||this.cursors.up.isDown||this.upKey.isDown)&&(this.rotation-=.02)}updateBarrel(e){const t=e.positionToCamera(this.scene.cameras.main).subtract(new Phaser.Math.Vector2(this.x,this.y)).angle();this.barrel.rotation=t+Phaser.Math.PI2/4}handleShooting(){(this.shootingKey.isDown&&this.scene.time.now>this.lastShoot||this.scene.input.activePointer.isDown&&this.scene.time.now>this.lastShoot)&&(this.scene.tweens.add({targets:this,props:{alpha:.8},delay:0,duration:5,ease:"Power1",easeParams:null,hold:0,repeat:0,repeatDelay:0,yoyo:!0,paused:!1}),this.bullets.getLength()<10&&(this.bullets.add(new n({scene:this.scene,rotation:this.barrel.rotation,x:this.barrel.x,y:this.barrel.y,texture:"bulletBlue"})),this.lastShoot=this.scene.time.now+100))}redrawLifebar(){this.lifeBar.clear(),this.lifeBar.fillStyle(15100456,1),this.lifeBar.fillRect(-this.width/2,this.height/2,this.width*this.health/100,15),this.lifeBar.lineStyle(2,16777215),this.lifeBar.strokeRect(-this.width/2,this.height/2,this.width,15),this.lifeBar.setDepth(1)}updateHealth(){this.health>0?(this.health-=.05,this.redrawLifebar()):(this.health=0,this.active=!1,this.scene.scene.start("MenuScene"))}}class o extends Phaser.GameObjects.Image{getBarrel(){return this.barrel}getBullets(){return this.bullets}constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.initContainer(),this.scene.add.existing(this)}initContainer(){this.health=1,this.lastShoot=0,this.speed=100,this.setDepth(0),this.barrel=this.scene.add.image(0,0,"barrelRed"),this.barrel.setOrigin(.5,1),this.barrel.setDepth(1),this.lifeBar=this.scene.add.graphics(),this.redrawLifebar(),this.bullets=this.scene.add.group({active:!0,maxSize:10,runChildUpdate:!0}),this.scene.tweens.add({targets:this,props:{y:this.y-200},delay:0,duration:2e3,ease:"Linear",easeParams:null,hold:0,repeat:-1,repeatDelay:0,yoyo:!0}),this.scene.physics.world.enable(this)}update(){this.active?(this.barrel.x=this.x,this.barrel.y=this.y,this.lifeBar.x=this.x,this.lifeBar.y=this.y,this.handleShooting()):(this.destroy(),this.barrel.destroy(),this.lifeBar.destroy())}handleShooting(){this.scene.time.now>this.lastShoot&&this.bullets.getLength()<10&&(this.bullets.add(new n({scene:this.scene,rotation:this.barrel.rotation,x:this.barrel.x,y:this.barrel.y,texture:"bulletRed"})),this.lastShoot=this.scene.time.now+400)}redrawLifebar(){this.lifeBar.clear(),this.lifeBar.fillStyle(15100456,1),this.lifeBar.fillRect(-this.width/2,this.height/2,this.width*this.health,15),this.lifeBar.lineStyle(2,16777215),this.lifeBar.strokeRect(-this.width/2,this.height/2,this.width,15),this.lifeBar.setDepth(1)}updateHealth(){this.health>0?(this.health-=.05,this.redrawLifebar()):(this.health=0,this.active=!1,this.scene.events.emit("addScore",10))}}class d extends Phaser.GameObjects.Image{constructor(e){super(e.scene,e.x,e.y,e.texture),this.initImage(),this.scene.add.existing(this)}initImage(){this.setOrigin(0,0),this.scene.physics.world.enable(this),this.body.setImmovable(!0)}update(){}}class c extends Phaser.Scene{constructor(){super({key:"GameScene"})}create(){this.map=this.make.tilemap({key:"levelMap"}),this.tileset=this.map.addTilesetImage("tiles"),null!==this.tileset&&(this.layer=this.map.createLayer("tileLayer",this.tileset,0,0),null!==this.layer&&(this.cameras.main.setBounds(0,0,this.map.widthInPixels,this.map.heightInPixels),this.cameras.main.setZoom(1.35),this.layer.setOrigin(0),this.layer.setCollisionByProperty({collide:!0}))),this.obstacles=this.add.group({classType:d,runChildUpdate:!0}),this.enemies=this.add.group({classType:o}),this.convertObjects(),null!=this.layer&&(this.physics.add.collider(this.player,this.layer),this.physics.add.collider(this.player.getBullets(),this.layer,this.bulletHitLayer,void 0,this)),this.physics.add.collider(this.player,this.obstacles),this.physics.add.collider(this.player.getBullets(),this.obstacles,this.bulletHitObstacles,void 0,this),this.enemies.children.each((e=>(this.physics.add.overlap(this.player.getBullets(),e,this.playerBulletHitEnemy,void 0,this),this.physics.add.overlap(e.getBullets(),this.player,this.enemyBulletHitPlayer,void 0),this.physics.add.collider(e.getBullets(),this.obstacles,this.bulletHitObstacles,void 0),null!==this.layer&&this.physics.add.collider(e.getBullets(),this.layer,this.bulletHitLayer,void 0,this),!0)),this),this.cameras.main.startFollow(this.player)}update(){this.player.update(),this.enemies.children.each((e=>{if(e.update(),this.player.active&&e.active&&null!==e.body){const t=Phaser.Math.Angle.Between(e.body.x,e.body.y,this.player.body.x,this.player.body.y);e.getBarrel().angle=(t+Math.PI/2)*Phaser.Math.RAD_TO_DEG}return!0}),this),0==this.enemies.getLength()&&console.log("player Win")}convertObjects(){var e;(null===(e=this.map.getObjectLayer("objects"))||void 0===e?void 0:e.objects).forEach((e=>{if("player"===e.type)this.player=new l({scene:this,x:e.x,y:e.y,texture:"tankBlue"});else if("enemy"===e.type){const t=new o({scene:this,x:e.x,y:e.y,texture:"tankRed"});this.enemies.add(t)}else{const t=new d({scene:this,x:e.x,y:e.y-40,texture:e.type});this.obstacles.add(t)}}))}bulletHitLayer(e){e.destroy()}bulletHitObstacles(e,t){e.destroy()}enemyBulletHitPlayer(e,t){e.destroy(),t.updateHealth()}playerBulletHitEnemy(e,t){e.destroy(),t.updateHealth()}}class y extends Phaser.Scene{constructor(){super({key:"MenuScene"}),this.bitmapTexts=[]}init(){null!==this.input.keyboard&&(this.startKey=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE),this.startKey.isDown=!1)}create(){this.bitmapTexts.push(this.add.bitmapText(this.sys.canvas.width/2-120,this.sys.canvas.height/2,"font","PRESS SPACE TO PLAY",30)),this.bitmapTexts.push(this.add.bitmapText(this.sys.canvas.width/2-120,this.sys.canvas.height/2-100,"font","TANK",100))}update(){this.startKey.isDown&&this.scene.start("GameScene")}}const p={title:"Tank",version:"2.0",width:window.innerWidth,height:window.innerHeight,type:Phaser.AUTO,parent:"game",scene:[r,y,c,a],input:{keyboard:!0},physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}},backgroundColor:"#000000",render:{pixelArt:!0,antialias:!0}};class u extends h().Game{constructor(e){super(e)}}window.addEventListener("load",(()=>{new u(p)}))}},s={};function i(e){var h=s[e];if(void 0!==h)return h.exports;var a=s[e]={exports:{}};return t[e].call(a.exports,a,a.exports,i),a.exports}i.m=t,e=[],i.O=(t,s,h,a)=>{if(!s){var r=1/0;for(d=0;d<e.length;d++){for(var[s,h,a]=e[d],n=!0,l=0;l<s.length;l++)(!1&a||r>=a)&&Object.keys(i.O).every((e=>i.O[e](s[l])))?s.splice(l--,1):(n=!1,a<r&&(r=a));if(n){e.splice(d--,1);var o=h();void 0!==o&&(t=o)}}return t}a=a||0;for(var d=e.length;d>0&&e[d-1][2]>a;d--)e[d]=e[d-1];e[d]=[s,h,a]},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var s in t)i.o(t,s)&&!i.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};i.O.j=t=>0===e[t];var t=(t,s)=>{var h,a,[r,n,l]=s,o=0;if(r.some((t=>0!==e[t]))){for(h in n)i.o(n,h)&&(i.m[h]=n[h]);if(l)var d=l(i)}for(t&&t(s);o<r.length;o++)a=r[o],i.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return i.O(d)},s=self.webpackChunktype_project_template=self.webpackChunktype_project_template||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})();var h=i.O(void 0,[216],(()=>i(573)));h=i.O(h)})();